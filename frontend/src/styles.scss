// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@use "sass:map";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$light-primary-text: rgba(white, 0.87);
$light-focused: rgba(white, 0.12);
$light-dividers: rgba(white, 0.12);
$light-disabled-text: rgba(white, 0.5);
$light-secondary-text: rgba(white, 0.7);

$grey-palette: (
  50: #fafafa,
  100: #f5f5f5,
  200: #eeeeee,
  300: #e0e0e0,
  400: #bdbdbd,
  500: #9e9e9e,
  600: #757575,
  700: #616161,
  800: #424242,
  900: #212121,
  A100: #ffffff,
  A200: #eeeeee,
  A400: #bdbdbd,
  A700: #616161,
  contrast: (
    50: $light-primary-text,
    100: $light-primary-text,
    200: $light-primary-text,
    300: $light-primary-text,
    400: $light-primary-text,
    500: $light-primary-text,
    600: $light-primary-text,
    700: $light-primary-text,
    800: $light-primary-text,
    900: $light-primary-text,
    A100: $light-primary-text,
    A200: $light-primary-text,
    A400: $light-primary-text,
    A700: $light-primary-text,
  ),
);

$dark-theme-background-palette: (
  status-bar: black,
  app-bar: map.get($grey-palette, 900),
  background: #1f1c3d,
  hover: rgba(white, 0.04),
  // TODO(kara): check style with Material Design UX
  card: map.get($grey-palette, 800),
  dialog: #161616,
  disabled-button: rgba(white, 0.12),
  raised-button: map.get($grey-palette, 800),
  focused-button: $light-focused,
  selected-button: map.get($grey-palette, 900),
  selected-disabled-button: map.get($grey-palette, 800),
  disabled-button-toggle: black,
  unselected-chip: map.get($grey-palette, 700),
  disabled-list-option: rgba(white, 0.12),
  tooltip: map.get($grey-palette, 700),
);

$dark-theme-foreground-palette: (
  base: white,
  divider: $light-dividers,
  dividers: $light-dividers,
  disabled: $light-disabled-text,
  disabled-button: rgba(white, 0.3),
  disabled-text: $light-disabled-text,
  elevation: black,
  hint-text: $light-disabled-text,
  secondary-text: $light-secondary-text,
  icon: white,
  icons: white,
  text: white,
  slider-min: white,
  slider-off: rgba(white, 0.3),
  slider-off-active: rgba(white, 0.3),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$pokemon-manager-primary: mat.define-palette($grey-palette);
$pokemon-manager-accent: mat.define-palette(
  mat.$pink-palette,
  A200,
  A100,
  A400
);

// The warn palette is optional (defaults to red).
$pokemon-manager-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$pokemon-manager-theme: mat.define-dark-theme(
  (
    color: (
      primary: $pokemon-manager-primary,
      accent: $pokemon-manager-accent,
      warn: $pokemon-manager-warn,
      //background: $dark-theme-background-palette,
      //foreground: $dark-theme-foreground-palette,,,,,
    ),
  )
);
$pokemon-manager-theme: map-merge(
  $pokemon-manager-theme,
  map-merge(
    map-get($pokemon-manager-theme, background),
    (
      background: $dark-theme-background-palette,
    )
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($pokemon-manager-theme);

@import "./styles/buttons/btn-primary.scss";
@import "./styles/buttons/btn-default.scss";
@import "./styles/buttons/btn-success.scss";
@import "./styles/buttons/btn-danger.scss";
@import "./styles/modal";

body {
  background-color: #1f1c3d;
  color: white;
  border-color: #c2c3c7;
  font-size: 20px;
  font-family: "Poppins", sans-serif;
}

.type-displayText {
  width: 80px;
  height: 16px;
  padding: 5px;
}

.icon-type {
  height: 30px;
  width: 30px;
}

.img-pokemon {
  width: 300px;
  height: 300px;
  padding: 0 10px;
}
.img-category {
  width: 50px;
  height: 30px;
}

.clickable-icon:hover {
  transform: scale(0.95);
  cursor: pointer;
}

.cooldown-horizontal {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  pointer-events: none;
}
.cooldown-vertical {
  position: absolute;
  bottom: 0;
  right: 0;
  width: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  pointer-events: none;
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
}

progress-bar {
  width: -webkit-fill-available;
}

.ELECTRIC {
  background-color: #fac000;
}
.GRASS {
  background-color: #3fa129;
}
.NORMAL {
  background-color: #9fa19f;
}
.WATER {
  background-color: #2980ef;
}
.FAIRY {
  background-color: #ef70ef;
}
.BUG {
  background-color: #91a119;
}
.FIRE {
  background-color: #e62829;
}
.DRAGON {
  background-color: #5060e1;
}
.ROCK {
  background-color: #afa981;
}
.GROUND {
  background-color: #915121;
}
.POISON {
  background-color: #9141cb;
}
.PSYCHIC {
  background-color: #ef4179;
}
.DARK {
  background-color: #50413f;
}
.GHOST {
  background-color: #704170;
}
.FIGHTING {
  background-color: #ff8000;
}
.STEEL {
  background-color: #60a1b8;
}
.ICE {
  background-color: #3fd8ff;
}
.FLYING {
  background-color: #81b9ef;
}
