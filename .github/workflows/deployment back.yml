name: Deploy to Azure VM

on:
  push:
    branches: [ prod ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ prod ]
    paths:
      - 'backend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Vérifier le code source
      - name: Checkout code
        uses: actions/checkout@v2

      # Construire les images Docker
      - name: Build Docker images
        run: |
          docker build -t core -f ./backend/core/Dockerfile ./backend
          docker build -t battle -f ./backend/battle/Dockerfile ./backend
          docker build -t battle-stats -f ./backend/battle-stats/Dockerfile ./backend
          docker build -t battle-websocket -f ./backend/battle-websocket/Dockerfile ./backend

      # Configurer SSH pour se connecter à la VM
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Créer les répertoires nécessaires sur la VM
      - name: Create necessary directories for Docker volumes
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "
          docker system prune -a --volumes -f
          "

      # Nettoyer les fichiers sur la VM sauf .env et les volumes Docker
      - name: Clean directory on VM except .env and volumes
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "
          sudo find ${{ secrets.DEPLOY_PATH }} -type f ! -name '.env' ! -path '*/.ssh/*' \
          ! -path '*/kafka/zookeeper_data/*' ! -path '*/kafka/kafka-data/*' -delete
          "

      # Transférer les images Docker vers la VM
      - name: Save and transfer Docker images
        run: |
          docker save core | ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "docker load"
          docker save battle | ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "docker load"
          docker save battle-stats | ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "docker load"
          docker save battle-websocket | ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "docker load"

      # Transférer le fichier docker-compose.yml depuis /backend vers la VM
      - name: Transfer docker-compose.yml and nginx.conf
        run: |
          scp -o StrictHostKeyChecking=no backend/deployment/docker-compose.yml ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.DEPLOY_PATH }}
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'mkdir -p ~/tmp'
          scp -o StrictHostKeyChecking=no backend/nginx/prod/nginx.conf ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/tmp/nginx.conf
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'sudo mv ~/tmp/nginx.conf /etc/nginx/'

      - name: Restart VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "sudo reboot"

